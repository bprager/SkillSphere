# docker-compose.yml

services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.85.0
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    depends_on:
      - tempo
      - loki
      - prometheus

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml:ro
      - ./tempo-data:/tmp/tempo
    ports:
      - "3200:3200"   # tempo
      - "4317:4317"   # otlp grpc
      - "4318:4318"   # otlp http

  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - tempo
      - loki
      - prometheus

  loki:
    image: grafana/loki:2.9.7
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    user: "10001:10001"
    ports:
      - "3100:3100"
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:v2.51.2
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.11.0
    container_name: nginx-exporter
    command: -nginx.scrape-uri=http://192.168.1.2:80/nginx_status
    ports:
      - "9113:9113"
    restart: unless-stopped

  mcp-server:
    build: .
    container_name: mcp-server
    env_file:
      - .env
    volumes:
      - ./src:/app/src:ro
    ports:
      - "8000:8000"
    depends_on:
      - otel-collector
      - tempo

volumes:
  tempo-data:
    driver: local
  grafana-data:
    driver: local
  loki-data:
    driver: local
  prometheus-data:
    driver: local

