name: SkillSphere MCP Tests and Linting

on:
  push:
    branches: [ main ]
    paths:
      - 'skill_sphere_mcp/**'
      - '.github/workflows/skill_sphere_mcp.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'skill_sphere_mcp/**'
      - '.github/workflows/skill_sphere_mcp.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        check: [pylint, pytest, coverage]
        python-version: [3.10.17]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper versioning

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pylint pytest-asyncio coverage[toml] coverage-badge
        cd skill_sphere_mcp
        pip install -e .

    - name: Create pylint config
      run: |
        echo "[MASTER]
        disable=C0111,C0103,C0305,C0321,W0401,W0622,W0614
        max-line-length=120
        ignore=CVS
        persistent=yes
        load-plugins=pylint.extensions.docparams,pylint.extensions.docstyle,pylint.extensions.mccabe
        ignored-modules=uvicorn,fastapi
        " > .pylintrc

    - name: Run pylint
      if: matrix.check == 'pylint'
      run: |
        cd skill_sphere_mcp/src
        PYTHONPATH=$PYTHONPATH:$(pwd)/.. pylint --rcfile=../../.pylintrc --fail-under=9.0 $(git ls-files '*.py')

    - name: Run pytest
      if: matrix.check == 'pytest'
      run: |
        cd skill_sphere_mcp
        PYTHONPATH=$PYTHONPATH:$(pwd)/src pytest tests/ -v --asyncio-mode=auto

    - name: Run coverage and generate badge
      if: matrix.check == 'coverage'
      run: |
        cd skill_sphere_mcp
        PYTHONPATH=$PYTHONPATH:$(pwd)/src pytest tests/ -v --cov=src --cov-report=xml --asyncio-mode=auto
        coverage report -m

    - name: Generate coverage badge
      if: matrix.check == 'coverage'
      uses: tj-actions/coverage-badge-py@v2
      with:
        working-directory: ./skill_sphere_mcp
        output: coverage.svg

    - name: Debug directory structure
      if: matrix.check == 'coverage'
      run: |
        pwd
        ls -la
        ls -la ./skill_sphere_mcp
        echo "PYTHONPATH: $PYTHONPATH"

    - name: Commit files
      if: matrix.check == 'coverage'
      run: |
        if [ -f ./skill_sphere_mcp/coverage.svg ]; then
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add ./skill_sphere_mcp/coverage.svg
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "Updated skill_sphere_mcp coverage badge"
        else
          echo "No coverage badge to commit"
          exit 0
        fi

    - name: Push changes
      if: matrix.check == 'coverage'
      run: |
        if [ -f ./skill_sphere_mcp/coverage.svg ]; then
          git push
        else
          echo "No coverage badge to push"
          exit 0
        fi
